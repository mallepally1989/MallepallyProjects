<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnHome.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>